---
- hosts: <[ replica.hostname ]>
  tasks:
    - name: create a .gcloud directory readable only by root.
      file:
        name: "{{ ansible_env.HOME }}/.gcloud"
        state: directory

    - name: copy service account credentials to master
      copy:
        src: "{{ lookup('env', 'HOME') }}/.gcloud/admin-keys.json"
        dest: "{{ ansible_env.HOME }}/.gcloud/admin-keys.json"
    
    - name: activate service account on the master
      command: "gcloud auth activate-service-account --key-file={{ ansible_env.HOME }}/.gcloud/admin-keys.json"
    <[ #gcs_bucket ]>
    - name: backup data folder of the failed instance to GCS for later inspection (warning, this can take a while, depending upon the data size.)
      command: "gsutil -m cp -r /var/lib/postgresql/9.6/main gs://<[ gcs_bucket ]>/<[ replica.hostname ]>-{{ ansible_date_time.epoch }}"
      become: true
      become_method: sudo
    <[ /gcs_bucket ]>

- hosts: localhost # assumes we run it on gateway
  tasks:
    - name: delete the failed master instance
      command: gcloud compute instances delete <[ replica.hostname ]>

# Let terraform recreate the instance for us
- include: "{{ lookup('env', 'HOME') }}/.dbadmin/playbooks/terraform_instances.yml"