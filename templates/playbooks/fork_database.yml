---
- hosts: staging
  tasks:
    - name: add gcsfuse to apt sources list
      apt_repository:
        repo: deb http://packages.cloud.google.com/apt gcsfuse-jessie main
        state: present
        filename: /etc/apt/sources.list.d/gcsfuse.list

    - name: import the repository signing key
      apt_key:
        url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
        state: present

    - name: add postgres repository into source list
      apt_repository:
        repo: deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main
        state: present
        filename: '/etc/apt/sources.list.d/pgdg.list'

    - name: import the repository signing key
      apt_key:
        url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
        state: present

    - name: install prerequisites
      apt:
        update_cache: yes
        name: "{{ item }}"
      with_items: 
        - dbus
        - rsync
        - gcsfuse
        - unzip
        - postgresql-9.6
        - postgresql-server-dev-9.6
        - repmgr 
        - python-pip 
        - python-dev 
        - build-essential 
        - libssl-dev 
        - libffi-dev
    
    - name: install python modules
      pip:
        name: "{{ item }}"
      with_items:
        - pexpect
        - psycopg2

    - name: add new hostname in /etc/hosts
      lineinfile:
        dest: /etc/hosts
        line: '127.0.0.1 {{ hostname }} {{ hostname }}' 

    - name: put the ip addresses of barman into hosts file
      lineinfile:
        dest: /etc/hosts
        line: "<[ barman.internal_ip ]> <[ barman.hostname ]>"

    - block: 
      - name: generate ssh keys
        expect: 
          command: ssh-keygen -t rsa
          responses:
            'Enter file in which to save the key \(/var/lib/postgresql/.ssh/id_rsa\):': "\n"
            'Enter passphrase \(empty for no passphrase\):': "\n"
            'Enter same passphrase again:': "\n"
          creates: /var/lib/postgresql/.ssh/id_rsa

      - name: copy barman public key into authorized_keys
        copy:
          src: /tmp/barman/var/lib/barman/.ssh/id_rsa.pub
          dest: /var/lib/postgresql/.ssh/authorized_keys
      become: true
      become_method: sudo
      become_user: postgres

    - name: stop staging server
      service:
        name: postgresql
        state: stopped

- hosts: barman
  tasks:
    - name: backup master for the lastest data
      command: barman backup <[ master.hostname ]>

    - name: get the backup id of the current master in barman
      shell: barman list-backup <[ master.hostname ]> | cut -d ' ' -f2 | head -1
      register: backup_id

    - name: pause to wait for barman's backup command
      pause:
        seconds: 30

    - name: get the current time
      command: date  --rfc-3339=seconds
      register: current_time

    - name: create a snapshot of current master's data
      command: barman recover --target-time "{{current_time.stdout}}" --remote-ssh-command "ssh -o StrictHostKeyChecking=no postgres@<[ staging.internal_ip ]>" <[ master.hostname ]> {{ backup_id.stdout }} /var/lib/postgresql/9.6/main/

- hosts: staging
  tasks:
    - name: restart staging server
      service:
        name: postgresql
        state: started